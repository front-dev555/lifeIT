{"ast":null,"code":"var _jsxFileName = \"/Users/donpindyukel/Downloads/test-project/src/quax/useQuaxStore.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useEffect, useState, createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreContext = /*#__PURE__*/createContext(null);\nexport const StoreProvider = _ref => {\n  _s();\n  let {\n    store,\n    children\n  } = _ref;\n  const [state, setState] = useState(store.getState());\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      setState(store.getState());\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [store]);\n  const value = {\n    store,\n    dispatch: store.dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreProvider, \"yKdqrUq3NdhF3vyVOUeJAQpdkA0=\");\n_c = StoreProvider;\nexport const useQuaxStore = () => {\n  _s2();\n  const context = useContext(StoreContext);\n  if (!context) {\n    throw new Error('useQuaxStore must be used within a StoreProvider');\n  }\n  return context;\n};\n_s2(useQuaxStore, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const useQuaxDispatch = () => {\n  _s3();\n  const {\n    dispatch\n  } = useQuaxStore();\n  return dispatch;\n};\n_s3(useQuaxDispatch, \"g7YJ5Pz076/jLXqi/xArfxYL+CE=\", false, function () {\n  return [useQuaxStore];\n});\nexport function useQuaxSelector(selector) {\n  _s4();\n  const {\n    store\n  } = useQuaxStore();\n  const [result, setResult] = useState(selector(store.getState()));\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      setResult(selector(store.getState()));\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [store, selector]);\n  return result;\n}\n_s4(useQuaxSelector, \"JHWKqgFzTTI6snDm1bnK3MwGNqY=\", false, function () {\n  return [useQuaxStore];\n});\nvar _c;\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"names":["React","useEffect","useState","createContext","useContext","jsxDEV","_jsxDEV","StoreContext","StoreProvider","_ref","_s","store","children","state","setState","getState","unsubscribe","subscribe","value","dispatch","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useQuaxStore","_s2","context","Error","useQuaxDispatch","_s3","useQuaxSelector","selector","_s4","result","setResult","$RefreshReg$"],"sources":["/Users/donpindyukel/Downloads/test-project/src/quax/useQuaxStore.tsx"],"sourcesContent":["import React, { useEffect, useState, createContext, useContext, ReactNode } from 'react';\nimport { AppState, Store, Selector } from '../ducks/types';\nimport { AppAction } from '../ducks/actions';\n\ninterface StoreContextValue<S = AppState, A = AppAction> {\n  store: Store<S, A>;\n  dispatch: (action: A) => A;\n}\n\nconst StoreContext = createContext<StoreContextValue | null>(null);\n\ninterface StoreProviderProps {\n  store: Store<AppState, AppAction>;\n  children: ReactNode;\n}\n\nexport const StoreProvider: React.FC<StoreProviderProps> = ({ store, children }) => {\n  const [state, setState] = useState<AppState>(store.getState());\n\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      setState(store.getState());\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [store]);\n\n  const value: StoreContextValue = {\n    store,\n    dispatch: store.dispatch,\n  };\n\n  return (\n    <StoreContext.Provider value={value}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nexport const useQuaxStore = () => {\n  const context = useContext(StoreContext);\n  if (!context) {\n    throw new Error('useQuaxStore must be used within a StoreProvider');\n  }\n  return context;\n};\n\nexport const useQuaxDispatch = () => {\n  const { dispatch } = useQuaxStore();\n  return dispatch;\n};\n\nexport function useQuaxSelector<TResult = unknown>(\n  selector: Selector<AppState, TResult>\n): TResult {\n  const { store } = useQuaxStore();\n  const [result, setResult] = useState<TResult>(selector(store.getState()));\n\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      setResult(selector(store.getState()));\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [store, selector]);\n\n  return result;\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASzF,MAAMC,YAAY,gBAAGJ,aAAa,CAA2B,IAAI,CAAC;AAOlE,OAAO,MAAMK,aAA2C,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAC7E,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAWS,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC;EAE9Dd,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAGL,KAAK,CAACM,SAAS,CAAC,MAAM;MACxCH,QAAQ,CAACH,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEF,OAAO,MAAM;MACXC,WAAW,CAAC,CAAC;IACf,CAAC;EACH,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,MAAMO,KAAwB,GAAG;IAC/BP,KAAK;IACLQ,QAAQ,EAAER,KAAK,CAACQ;EAClB,CAAC;EAED,oBACEb,OAAA,CAACC,YAAY,CAACa,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAN,QAAA,EACjCA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACd,EAAA,CAvBWF,aAA2C;AAAAiB,EAAA,GAA3CjB,aAA2C;AAyBxD,OAAO,MAAMkB,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChC,MAAMC,OAAO,GAAGxB,UAAU,CAACG,YAAY,CAAC;EACxC,IAAI,CAACqB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,YAAY;AAQzB,OAAO,MAAMI,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnC,MAAM;IAAEZ;EAAS,CAAC,GAAGO,YAAY,CAAC,CAAC;EACnC,OAAOP,QAAQ;AACjB,CAAC;AAACY,GAAA,CAHWD,eAAe;EAAA,QACLJ,YAAY;AAAA;AAInC,OAAO,SAASM,eAAeA,CAC7BC,QAAqC,EAC5B;EAAAC,GAAA;EACT,MAAM;IAAEvB;EAAM,CAAC,GAAGe,YAAY,CAAC,CAAC;EAChC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGlC,QAAQ,CAAU+B,QAAQ,CAACtB,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEzEd,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAGL,KAAK,CAACM,SAAS,CAAC,MAAM;MACxCmB,SAAS,CAACH,QAAQ,CAACtB,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC;IAEF,OAAO,MAAM;MACXC,WAAW,CAAC,CAAC;IACf,CAAC;EACH,CAAC,EAAE,CAACL,KAAK,EAAEsB,QAAQ,CAAC,CAAC;EAErB,OAAOE,MAAM;AACf;AAACD,GAAA,CAjBeF,eAAe;EAAA,QAGXN,YAAY;AAAA;AAAA,IAAAD,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}