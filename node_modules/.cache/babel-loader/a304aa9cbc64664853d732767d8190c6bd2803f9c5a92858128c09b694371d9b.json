{"ast":null,"code":"import { put, takeLatest, select, call } from 'redux-saga/effects';\nimport { createOperationSuccessAction, createLoadingEndAction } from './actions';\nimport { ActionTypes } from './actionTypes';\nimport { makeOperation } from '../api';\nconst selectValue = state => state.value;\nlet controller;\nfunction* handleOperation(currentValue, delta) {\n  controller = new AbortController();\n  try {\n    const result = yield call(makeOperation, currentValue, delta, controller.signal);\n    yield put(createOperationSuccessAction(result));\n  } catch (error) {\n    alert(error); // можно конечно модалку, но это тестовое слишком большое оказалось по факту\n    yield put(createLoadingEndAction());\n  }\n}\nfunction* handleIncrement() {\n  const currentValue = yield select(selectValue);\n  yield call(handleOperation, currentValue, 1);\n}\nfunction* handleDecrement() {\n  const currentValue = yield select(selectValue);\n  yield call(handleOperation, currentValue, -1);\n}\nfunction* handleIncrementByValue(action) {\n  const currentValue = yield select(selectValue);\n  yield call(handleOperation, currentValue, action.payload);\n}\nfunction* handleDecrementByValue(action) {\n  const currentValue = yield select(selectValue);\n  yield call(handleOperation, currentValue, -action.payload);\n}\nfunction* handleCancelOperation() {\n  yield put(createLoadingEndAction());\n  if (controller) {\n    controller.abort();\n  }\n}\nexport function* rootSaga() {\n  yield takeLatest(ActionTypes.INCREMENT_ASYNC, handleIncrement);\n  yield takeLatest(ActionTypes.DECREMENT_ASYNC, handleDecrement);\n  yield takeLatest(ActionTypes.INCREMENT_BY_VALUE_ASYNC, handleIncrementByValue);\n  yield takeLatest(ActionTypes.DECREMENT_BY_VALUE_ASYNC, handleDecrementByValue);\n  yield takeLatest(ActionTypes.CANCEL_ALL_OPERATIONS, handleCancelOperation);\n}","map":{"version":3,"names":["put","takeLatest","select","call","createOperationSuccessAction","createLoadingEndAction","ActionTypes","makeOperation","selectValue","state","value","controller","handleOperation","currentValue","delta","AbortController","result","signal","error","alert","handleIncrement","handleDecrement","handleIncrementByValue","action","payload","handleDecrementByValue","handleCancelOperation","abort","rootSaga","INCREMENT_ASYNC","DECREMENT_ASYNC","INCREMENT_BY_VALUE_ASYNC","DECREMENT_BY_VALUE_ASYNC","CANCEL_ALL_OPERATIONS"],"sources":["/Users/donpindyukel/Downloads/test-project/src/ducks/sagas.ts"],"sourcesContent":["import {\n  put,\n  takeLatest,\n  select,\n  call,\n  SelectEffect,\n  CallEffect,\n  PutEffect,\n  cancelled,\n  CancelledEffect,\n  take,\n  TakeEffect,\n} from 'redux-saga/effects';\nimport {\n  createOperationSuccessAction,\n  createIncrementByValueAction,\n  createDecrementByValueAction,\n  createLoadingEndAction,\n  AppAction,\n} from './actions';\nimport { ActionTypes } from './actionTypes';\nimport { makeOperation } from '../api';\nimport { AppState } from './types';\n\ntype SagaEffect =\n  | SelectEffect\n  | CallEffect<number>\n  | CallEffect<void>\n  | PutEffect<AppAction>\n  | CancelledEffect\n  | TakeEffect;\n\nconst selectValue: (state: AppState) => number = (state) => state.value;\nlet controller: AbortController;\nfunction* handleOperation(\n  currentValue: number,\n  delta: number\n): Generator<SagaEffect, void, number> {\n  controller = new AbortController();\n  try {\n    const result = yield call(\n      makeOperation,\n      currentValue,\n      delta,\n      controller.signal\n    );\n    yield put(createOperationSuccessAction(result));\n  } catch (error) {\n    alert(error); // можно конечно модалку, но это тестовое слишком большое оказалось по факту\n    yield put(createLoadingEndAction());\n  }\n}\n\nfunction* handleIncrement(): Generator<SagaEffect, void, number> {\n  const currentValue = yield select(selectValue);\n  yield call(handleOperation, currentValue, 1);\n}\n\nfunction* handleDecrement(): Generator<SagaEffect, void, number> {\n  const currentValue = yield select(selectValue);\n  yield call(handleOperation, currentValue, -1);\n}\n\nfunction* handleIncrementByValue(\n  action: ReturnType<typeof createIncrementByValueAction>\n): Generator<SagaEffect, void, number> {\n  const currentValue = yield select(selectValue);\n  yield call(handleOperation, currentValue, action.payload);\n}\n\nfunction* handleDecrementByValue(\n  action: ReturnType<typeof createDecrementByValueAction>\n): Generator<SagaEffect, void, number> {\n  const currentValue = yield select(selectValue);\n  yield call(handleOperation, currentValue, -action.payload);\n}\n\nfunction* handleCancelOperation(): Generator<SagaEffect, void, number> {\n  yield put(createLoadingEndAction());\n  if (controller) {\n    controller.abort();\n  }\n}\n\nexport function* rootSaga() {\n  yield takeLatest(ActionTypes.INCREMENT_ASYNC, handleIncrement);\n  yield takeLatest(ActionTypes.DECREMENT_ASYNC, handleDecrement);\n  yield takeLatest(\n    ActionTypes.INCREMENT_BY_VALUE_ASYNC,\n    handleIncrementByValue\n  );\n  yield takeLatest(\n    ActionTypes.DECREMENT_BY_VALUE_ASYNC,\n    handleDecrementByValue\n  );\n  yield takeLatest(ActionTypes.CANCEL_ALL_OPERATIONS, handleCancelOperation);\n}\n"],"mappings":"AAAA,SACEA,GAAG,EACHC,UAAU,EACVC,MAAM,EACNC,IAAI,QAQC,oBAAoB;AAC3B,SACEC,4BAA4B,EAG5BC,sBAAsB,QAEjB,WAAW;AAClB,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,aAAa,QAAQ,QAAQ;AAWtC,MAAMC,WAAwC,GAAIC,KAAK,IAAKA,KAAK,CAACC,KAAK;AACvE,IAAIC,UAA2B;AAC/B,UAAUC,eAAeA,CACvBC,YAAoB,EACpBC,KAAa,EACwB;EACrCH,UAAU,GAAG,IAAII,eAAe,CAAC,CAAC;EAClC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMb,IAAI,CACvBI,aAAa,EACbM,YAAY,EACZC,KAAK,EACLH,UAAU,CAACM,MACb,CAAC;IACD,MAAMjB,GAAG,CAACI,4BAA4B,CAACY,MAAM,CAAC,CAAC;EACjD,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,KAAK,CAACD,KAAK,CAAC,CAAC,CAAC;IACd,MAAMlB,GAAG,CAACK,sBAAsB,CAAC,CAAC,CAAC;EACrC;AACF;AAEA,UAAUe,eAAeA,CAAA,EAAwC;EAC/D,MAAMP,YAAY,GAAG,MAAMX,MAAM,CAACM,WAAW,CAAC;EAC9C,MAAML,IAAI,CAACS,eAAe,EAAEC,YAAY,EAAE,CAAC,CAAC;AAC9C;AAEA,UAAUQ,eAAeA,CAAA,EAAwC;EAC/D,MAAMR,YAAY,GAAG,MAAMX,MAAM,CAACM,WAAW,CAAC;EAC9C,MAAML,IAAI,CAACS,eAAe,EAAEC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC/C;AAEA,UAAUS,sBAAsBA,CAC9BC,MAAuD,EAClB;EACrC,MAAMV,YAAY,GAAG,MAAMX,MAAM,CAACM,WAAW,CAAC;EAC9C,MAAML,IAAI,CAACS,eAAe,EAAEC,YAAY,EAAEU,MAAM,CAACC,OAAO,CAAC;AAC3D;AAEA,UAAUC,sBAAsBA,CAC9BF,MAAuD,EAClB;EACrC,MAAMV,YAAY,GAAG,MAAMX,MAAM,CAACM,WAAW,CAAC;EAC9C,MAAML,IAAI,CAACS,eAAe,EAAEC,YAAY,EAAE,CAACU,MAAM,CAACC,OAAO,CAAC;AAC5D;AAEA,UAAUE,qBAAqBA,CAAA,EAAwC;EACrE,MAAM1B,GAAG,CAACK,sBAAsB,CAAC,CAAC,CAAC;EACnC,IAAIM,UAAU,EAAE;IACdA,UAAU,CAACgB,KAAK,CAAC,CAAC;EACpB;AACF;AAEA,OAAO,UAAUC,QAAQA,CAAA,EAAG;EAC1B,MAAM3B,UAAU,CAACK,WAAW,CAACuB,eAAe,EAAET,eAAe,CAAC;EAC9D,MAAMnB,UAAU,CAACK,WAAW,CAACwB,eAAe,EAAET,eAAe,CAAC;EAC9D,MAAMpB,UAAU,CACdK,WAAW,CAACyB,wBAAwB,EACpCT,sBACF,CAAC;EACD,MAAMrB,UAAU,CACdK,WAAW,CAAC0B,wBAAwB,EACpCP,sBACF,CAAC;EACD,MAAMxB,UAAU,CAACK,WAAW,CAAC2B,qBAAqB,EAAEP,qBAAqB,CAAC;AAC5E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}